
document.addEventListener('DOMContentLoaded', function () {
	console.log('loaded');
	var gameBody = document.createElement('div');
	gameBody.style.width = '600px';
	gameBody.style.height = '600px';
	gameBody.style.border = '1px dotted black';
	gameBody.style.left = "0";
	gameBody.style.right = '0';
	gameBody.style.margin = '20px auto';
	document.body.appendChild(gameBody);

	var bird = document.createElement('div');
	bird.classList.add('bird');

	gameBody.appendChild(bird);
	console.log(bird.style);
	bird.style.marginTop = '200px';
	bird.style.marginLeft = '250px';

	// setInterval(function(){
	// 	console.log('hit')
	// 	bird.style.marginTop = (parseInt(bird.style.marginTop, 10) - 1)+'px'
	// },20)

	document.body.addEventListener('keypress', function (e) {
		if (e.which === 32) {
			clearInterval(jumpInterval);
			var initPos = bird.style.marginTop.split('p');
			var jumpTarget = Number(initPos[0]) - 1 - 100;
			var velocity = 1;
			var jumpStart = true;
			var jumpOrigin = Number(initPos[0]);
			var jumpInterval = setInterval(function () {
				var position = bird.style.marginTop.split('p');
				if (jumpStart) {
					if (jumpTarget <= Number(position[0], 10) - 50) {
						bird.style.marginTop = Number(position[0]) - 2 + 'px';
					} else if (jumpTarget <= Number(position[0]) - 25) {
						bird.style.marginTop = Number(position[0]) - 1 + 'px';
					} else if (jumpTarget < Number(position[0])) {
						bird.style.marginTop = Number(position[0]) - .5 + 'px';
					} else if (jumpTarget === Number(position[0])) {
						jumpStart = false;
						bird.style.marginTop = Number(position[0]) + 'px';
					}
				} else if (!jumpStart) {
					if (jumpOrigin >= Number(position[0])) {
						bird.style.marginTop = Number(position[0]) + .5 + 'px';
					} else if (jumpOrigin >= Number(position[0]) + 10) {
						bird.style.marginTop = Number(position[0]) + 1 + 'px';
					} else {
						velocity++;
						bird.style.marginTop = Number(position[0]) + 2 + 'px';
					}
				}
			}, 0);
		}
	});
});

window.app = angular.module('myApp', ['ui.router']);

app.config(function ($urlRouterProvider, $locationProvider) {
	$locationProvider.html5Mode(true);
	$urlRouterProvider.otherwise('/');
});

app.config(function ($stateProvider) {
	$stateProvider.state('home', {
		url: '/',
		controller: 'homeCtrl',
		templateUrl: 'js/angular/angular.html'

	});
});

app.controller('homeCtrl', function ($scope, $state, $timeout, myFactory) {
	$scope.check = 'lalalala';
	$scope.data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
	console.log(myFactory.getNum());
});

app.directive('footer', function () {
	return {
		restrict: "EA",
		scope: {
			data: '@'
		},
		templateUrl: 'js/angular/footer.html',
		link: function (scope, elem, attrs) {
			console.log(scope.data);
			console.log(scope.data + 'this is awesome');
		}

	};
});

app.filter('simpleFilter', function () {
	return function (item) {
		console.log(item);
		var out = [];
		angular.forEach(item, function (obj) {
			if (obj < 5) out.push(obj);
		});
		return out;
	};
});

app.factory('myFactory', function () {
	return {
		getNum: function () {
			return Math.floor(Math.random() * 100);
		}
	};
});

// d3.select('body')
// 	.append('svg')
// 	.attr({
// 		height: 600,
// 		width: 700
// 	})
//# sourceMappingURL=data:application/json;base64,
